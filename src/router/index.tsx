{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr
{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr
{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr
    {"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr
    {"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr
    {"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr
    {"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr{"constants":{"activeFieldTrialGroups":["AccessibilityPerformanceMeasurementExperiment:Default","AppBoundDataReencrypt:Default","AvoidTrustedParamsCopies:Default","AvoidUnnecessaryBeforeUnloadCheckSync:Default","BeaconLeakageLogging:Enabled_v1_50","BoostRenderProcessForLoading:EnableAll","CacheSharingForPervasiveScripts:Preperiod6","ChangeGeneratedCodeCacheSize:Default","ChromeChannelStable:Enabled","ChromnientEduActionChip:Disabled","ChromnientNewFeedback:Launched","ChromnientPermissionBubbleAlt:Launched","ContextualSearchBox:Control_20250821","DeprecateUnload:Default_top_10_10","DesktopNewTabPage:Preperiod1_PP_20250812","DesktopNtpModuleSignInRequirement:EnabledLaunch","DeviceBoundSessionAccessObserverSharedRemote:Preperiod5_20250815","DeviceBoundSessionCredentials:Enabled_20250822","DwaFeature:Default","EnableHangWatcher:Default","EnableTLS13EarlyData:Preperiod8_20250716","EncryptedPrefHashing:Default","EsbAsASyncedSetting:Disabled_Unlaunch_20250911","ExpiredHistograms:ExpiryEnabledWithAllowlist","ExtremeLightweightUAFDetector:Default","FedCmSegmentationPlatform:Default","FieldRankServerClassification:Default","GlicAssetsUpdate:EnabledLaunch","GlicFreWarming:Default","HeapProfilerMultiKeyHashSet:Default","HttpCacheNoVarySearch:Default","IPProtectionPhase0:default_Stable_2025-08-15_Google_Only_MDL","IgnoreDuplicateNavs:Default","InfiniteTabsFreezingOnMemoryPressure:NoPurgeAndFreeze_20250903","KeepDefaultSearchEngineAlive:Preperiod_Default","LensOverlayBackToLivePage:Launched","LensSearchSidePanelDefaultWidth:Launched","LoadingNetworking2025:Default_20250818","MetricsAndCrashSampling:ReportingFull","MultipleLayerMemberRefGWSTestStudy:GroupA_20241008","NavigationThrottleRegistryAttributeCache:Default","NetworkServiceSandboxWindows:Default","NetworkServiceTaskScheduler:Enabled_20250910","NewContentForCheckerboardedScrollsPerFrame:Default","OfferMigrationToDiceUsers:Default","OmniboxAiModeZpsLaunch:Launch","OmniboxOnFocusZps:Launched","OmniboxRestoreInvisibleFocusOnly:EnabledLaunch","OptimizationTargetClientSidePhishingGradualRollout:Default","OptimizationTargetGeolocationImagePermissionRelevanceGradualRollout:Default","OptimizationTargetNotificationImagePermissionRelevanceGradualRollout:Default","PageMetadataDesktopExpansion:Default","PassHistogramSharedMemoryOnLaunch:EnabledLaunch","PdfInkSignatures:Default_20250618","PermissionSiteSettingsRadioButton:Default","PermissionsAIv4:Default","PlayReadyHardwareSecureDecryption:Default","PreconnectBookmarkBarTrigger:Default","PreconnectNonSearchOmniboxSuggestions:Default","PrefetchScheduler:Default","PreloadInlineDeferredImages:Default","PreloadingConfig:Default_20250509","PreloadingEagerHeuristicsForDesktop:Default","PrewarmServiceWorkerRegistrationForDSE:Default","PrioritizeHttpsResourceRecord:Default","QUIC:TcpBbr2StableSep2025","ReadAnythingReadAloudDesktop:Default","ReducePPMs:Enabled_20250819_50","RegenerateKeyForCatastrophicFailures:EnabledLaunch","RetroactivePreperiod:Default_Windows","SearchPrefetchHighPriorityPrefetches:Default","SeedFileTrial:Default","ServiceWorkerAutoPreload:Default","ServiceWorkerBackgroundUpdateForRegisteredStorageKeys:Default","ServiceWorkerStaticRouterRaceNetworkRequestPerformanceImprovement:Default","SharedDictionaryCache:Preperiod5","SharedTabGroups:Control_20250908","SlopBucket:Default","SwiftShaderDeprecation:Default","TcpConnectionPoolSizeTrial:Control_5percent","TcpPortRandomizationWin:EnabledLaunch","UKM:Enabled_20180314","UMA-Population-Restrict:normal","UMA-Uniformity-Trial-0.5-Percent-1:group_79","UMA-Uniformity-Trial-0.5-Percent-2:group_195","UMA-Uniformity-Trial-1-Percent:group_65","UMA-Uniformity-Trial-10-Percent:group_01","UMA-Uniformity-Trial-10-Percent-sanity:group_01","UMA-Uniformity-Trial-100-Percent:group_01","UMA-Uniformity-Trial-20-Percent:default","UMA-Uniformity-Trial-20-Percent-Session:group_02","UMA-Uniformity-Trial-5-Percent:group_16","UMA-Uniformity-Trial-50-Percent:default","UnoDesktopBookmarksAndReadingList:Enabled_20250527","V8PreconfigureOldGen:16M_2","WebRTC-ForceDtls13:Default","WebRTCColorAccuracy:Default","WinPlatformLocationProvider:Control_20250913","ZeroStateSuggestionsV2:Default"],"addressFamily":{"ADDRESS_FAMILY_IPV4":1,"ADDRESS_FAMILY_IPV6":2,"ADDRESS_FAMILY_UNSPECIFIED":0},"certPathBuilderDigestPolicy":{"kStr
